version: 3

vars:
  OS: go env GOOS
  ARCH: go env GOARCH
  BIN_DIR: "bin/{{.OS}}-{{.ARCH}}"

tasks:
  run:
    desc: Run app
    cmds:
      - "go run cmd/main.go"

  build:
    desc: Build app
    cmds:
      - go build -o bin/main ./cmd/main.go

  lint:
    desc: Lint app
    cmds:
      - "golangci-lint run"

  pb:
    desc: Gen Proto file
    cmds:
      - "protoc --go_out=. --go-grpc_out=. --go_opt=paths=source_relative --go-grpc_opt=paths=source_relative api/grpc/v1/gen/sso.proto"

  mocks:
    desc: Generate mocks
    cmds:
      - mockgen -source="./internal/ctrl/ctrl.go" -destination="tests/mocks/mock_ctrl.go" -package=mocks

  t:
    desc: Run tests
    cmds:
      - "task t-hdl"
      - "task t-ctrl"
      - "task t-repo"
      - "task t-integ"

  t-hdl:
    desc: Test handlers
    cmds:
      - "task t-http"
      - "task t-grpc"

  t-http:
    desc: Test http handlers
    cmds:
      - "go test ./internal/hdl/http"
      - "go test -coverprofile=cov_http.out ./internal/hdl/http && go tool cover -func=cov_http.out"

  t-grpc:
    desc: Test grpc handlers
    cmds:
      - "go test ./internal/hdl/grpc"
      - "go test -coverprofile=cov_grpc.out ./internal/hdl/grpc && go tool cover -func=cov_grpc.out"

  t-ctrl:
    desc: Run ctrl tests
    cmds:
      - "go test ./internal/ctrl"
      - "go test -coverprofile=cov_ctrl.out ./internal/ctrl && go tool cover -func=cov_ctrl.out"

  t-repo:
    desc: Run repo tests
    cmds:
      - "go test ./internal/repo/db"
      - "go test -coverprofile=cov_repo.out ./internal/repo/db && go tool cover -func=cov_repo.out"

  t-integ:
    desc: Run integration tests
    cmds:
      - "go test -v ./tests/E2E/..."

  t-load:
    desc: Start load testing
    cmds:
      - ./tests/load/start.sh